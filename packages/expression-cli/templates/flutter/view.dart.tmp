import 'package:expression_ui/expression_ui.dart';
import 'package:flutter/material.dart';

class {{viewName}}ExpressionView extends StatelessWidget {
  {{#events}}
  final Function()? {{eventFunctionName}};
  {{/events}}
  {{#textRuns}}
  final String? {{propertyName}};
  {{/textRuns}}

  final StateController? controller;

  const {{viewName}}ExpressionView({
    super.key,
    {{#events}}
    this.{{eventFunctionName}},
    {{/events}}
    {{#textRuns}}
    this.{{propertyName}},
    {{/textRuns}}
    this.controller,
  });

  @override
  Widget build(BuildContext context) {
    return BaseExpressionView(
      filePath: '{{{filePath}}}',
      artboardName: '{{artboardName}}',
      onEvent: onEventHandler,
      textValues: getTextValues(),
      controller: controller,
    );
  }

  void onEventHandler(StateEvent event) {
    switch (event.name) {
    {{#events}}
      case '{{rawName}}':
        {{eventFunctionName}}?.call();
        break;
    {{/events}}
    }
  }

  Map<String, String> getTextValues() {
    return {
      {{#textRuns}}
      if ({{propertyName}} != null) '{{rawName}}': {{propertyName}}!,
      {{/textRuns}}
    };
  }
}
